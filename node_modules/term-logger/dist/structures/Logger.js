"use strict";
/**
 * Logger module for logging messages with different types and colors.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
const getCurrentTime_1 = require("../utils/getCurrentTime");
const chalk_1 = __importDefault(require("chalk"));
/**
 * Available log types and their corresponding colors.
 */
const LOGS = {
    cluster: "blue",
    command: "cyan",
    complete: "green",
    critical: "red",
    database: "gray",
    debug: "magenta",
    error: "red",
    event: "yellow",
    fatal: "red",
    info: "white",
    note: "gray",
    pending: "magenta",
    ready: "blue",
    shard: "green",
    start: "green",
    success: "green",
    waiting: "blue",
    warn: "yellow",
    watch: "yellow",
};
/**
 * Template function for logging messages with the specified type and color.
 * @param message - The message to be logged.
 * @param type - The type of the log message.
 * @param color - The color of the log message.
 */
const template = (message, type, color) => console.log([
    chalk_1.default.grey(">"),
    [chalk_1.default.underline[color](type.toUpperCase()), chalk_1.default.gray(`[${(0, getCurrentTime_1.getCurrentTime)()}]`)].join("\xa0".repeat(12 - type.length)),
    chalk_1.default.white(message),
].join("\xa0".repeat(2)));
/**
 * Logger object that contains logging functions for each log type.
 */
exports.Logger = Object.fromEntries(Object.entries(LOGS).map(([key, value]) => [
    key,
    (message) => template(message, key, value),
]));
//# sourceMappingURL=Logger.js.map